C51 COMPILER V9.57.0.0   CODIGO_MAIN                                                       05/23/2018 11:44:45 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE CODIGO_MAIN
OBJECT MODULE PLACED IN .\Objects\codigo_main.obj
COMPILER INVOKED BY: C:\C51\Keil_v5\C51\BIN\C51.EXE codigo_main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\codigo_main.lst) TABS(2) OBJECT(.\Objects\codigo_main.obj)

line level    source

   1          #include<reg52.h>
   2          #include<lcd.h>
   3          #include<teclado.h>
   4          #include<serial.h>
   5          //#include<relogio.h>
   6          #include<myString.h>
   7          #include<buzzer.h>
   8          
   9          
  10          //TIMER0: uso geral (atraso,...)
  11          //TIMER1: exclusivo da serial
  12          //TIMER2: exclusivo do relógio
  13          
  14          
  15          
  16          char estado;
  17          #define NORMAL 0
  18          #define BLOQUEADA 1
  19          #define AUTONOMA 2 
  20          
  21          //Variaveis onde estará registrada a hora
  22          char hora = 0;
  23          char minuto = 0;
  24          char segundo = 0;
  25          char OLU = 0;
  26          
  27          // -- Flag que indica se o microcontrolador está esperando uma resposta do PC
  28          //No  momento que o microcontrolador envia um comando que precisa de resposta
  29          //essa flag é setada para 0. No momento que o computador responde, a flag
  30          //é setada para 1.
  31          char respostaPC;
  32          #define OK 0
  33          #define PE 1
  34          #define PC 2 
  35          #define PT 3
  36          #define PS 4
  37          #define PG 5 
  38          #define PP 6 
  39          
  40          idata char pacote[30];
  41          
  42          
  43          
  44          void clear_pacote(){
  45   1        
  46   1        char i;
  47   1        for (i = 0; pacote[i] != '\0' && i<30; i++){
  48   2          pacote[i] = '\0';
  49   2        }
  50   1          
  51   1        
  52   1      }
  53          
  54          void configura_serial();
C51 COMPILER V9.57.0.0   CODIGO_MAIN                                                       05/23/2018 11:44:45 PAGE 2   

  55          
  56            xdata struct {
  57            
  58            char nome[20];
  59            char partido[5];
  60            char nPartido[3];
  61            unsigned char nVotos;
  62            
  63            }presidente[10], governador[10], senador[10];
  64          
  65          short code codigo_eleitor [] = {262659, 206603, 244444, 216628, 
  66                262645,
  67                208221,
  68                262668,
  69                230357,
  70                262672,
  71                143293,
  72                245562,
  73                262686,
  74                264768,
  75                161948,
  76                262649,
  77                231423,
  78                230340,
  79                195149,
  80                231023,
  81                231035,
  82                221689,
  83                220149,
  84                264770,
  85                216625,
  86                262670,
  87                180669,
  88                262688,
  89                186103,
  90                230230,
  91                219839,
  92                243704,
  93                243716,
  94                275628,
  95                262543,
  96                275632,
  97                275631,
  98                275629,
  99                221433,
 100                262542,
 101                275633,
 102                218776,
 103                216149,
 104                262539,
 105                207273,
 106                259797 };
 107            
 108            
 109          //Como vai funcionar: a urna tem que estar em modo standby para receber algo do teclado ou da serial.
 110          //Se ela está em modo bloqueada, ela não pode estar disponível para receber nada do teclado.
 111          //Se ela está em modo
 112          
 113          
 114          //Inicialização: configurar serial, relógio, LCD e pedir os dados de todos os candidatos possíveis 
 115          
 116          /*void varredura_candidatos(){
C51 COMPILER V9.57.0.0   CODIGO_MAIN                                                       05/23/2018 11:44:45 PAGE 3   

 117            
 118            char d0, d1;
 119            char d[3];
 120            char comprimento, i, inicio_par;
 121            char nome[20];
 122            char partido[5];
 123            char pos_sen = 0, pos_gov = 0, pos_pres = 0;
 124          
 125            for (d0 = '0'; d0 <= '1'; d0++){
 126              
 127              d[0] = d0;
 128              for (d1 = '0'; d1 <= '9'; d1++){
 129                
 130                d[1] = d1;
 131                d[2] = '\0';
 132                // ---------------------------
 133                solicita_senador(d);
 134                while (respostaPC != OK);
 135                //Pega o dado do senador e ve se nao é nulo
 136                //Se não for, armazena no vetor de struct
 137                
 138                comprimento = pacote[2];
 139                
 140                for (i = 0; pacote[i+3] != ' ' ; i++){
 141                  nome[i] = pacote[i+3];
 142                }
 143                inicio_par = i + 1; 
 144                for (i = 0; pacote[i+inicio_par] != '\0'; i++){
 145                  partido[i] = pacote[i+inicio_par];
 146                }
 147                
 148                
 149                if(!compara_string(nome,"NULO")){
 150                  copia_string(senador[pos_sen].nome, nome);
 151                  copia_string(senador[pos_sen].partido, partido);
 152                  copia_string(senador[pos_sen].nPartido, d);
 153                }
 154                clear_string(pacote);
 155                clear_string(nome);
 156                clear_string(partido);
 157                // ---------------------------
 158                solicita_governador(d);
 159                
 160                while (respostaPC != OK);
 161                //Pega o dado do senador e ve se nao é nulo
 162                //Se não for, armazena no vetor de struct
 163                comprimento = pacote[2];
 164                
 165                for (i = 0; pacote[i+3] != ' '; i++){
 166                  nome[i] = pacote[i+3];
 167                }
 168                inicio_par = i + 1; 
 169                for (i = 0; pacote[i+inicio_par] != '\0'; i++){
 170                  partido[i] = pacote[i+inicio_par];
 171                }
 172                
 173                clear_pacote();
 174                
 175                if(!compara_string(nome,"NULO")){
 176                  copia_string(governador[pos_sen].nome, nome);
 177                  copia_string(governador[pos_sen].partido, partido);
 178                  copia_string(governador[pos_sen].nPartido, d);
C51 COMPILER V9.57.0.0   CODIGO_MAIN                                                       05/23/2018 11:44:45 PAGE 4   

 179                }
 180                
 181                // ---------------------------
 182                solicita_presidente(d);
 183                
 184                while (respostaPC != OK);
 185                //Pega o dado do senador e ve se nao é nulo
 186                //Se não for, armazena no vetor de struct
 187                comprimento = pacote[2];
 188                
 189                for (i = 0; pacote[i+3] != ' '; i++){
 190                  nome[i] = pacote[i+3];
 191                }
 192                inicio_par = i + 1; 
 193                for (i = 0; pacote[i+inicio_par] != '\0'; i++){
 194                  partido[i] = pacote[i+inicio_par];
 195                }
 196                
 197                clear_pacote();
 198                
 199                if(!compara_string(nome,"NULO")){
 200                  copia_string(presidente[pos_sen].nome, nome);
 201                  copia_string(presidente[pos_sen].partido, partido);
 202                  copia_string(presidente[pos_sen].nPartido, d);
 203                }
 204          
 205              } 
 206            }
 207          }*/
 208          
 209          void main(){
 210   1        char c;
 211   1        
 212   1        configura_serial();
 213   1        configura_relogio();
*** WARNING C206 IN LINE 213 OF codigo_main.c: 'configura_relogio': missing function-prototype
 214   1        
 215   1        //Inicializa o visor LCD
 216   1        LCD_init();
 217   1      
 218   1      
 219   1        
 220   1        
 221   1      
 222   1        //  escreve_serial("Inicializa");
 223   1        
 224   1          //clear_pacote();
 225   1          //solicita_senador("13");
 226   1        
 227   1        while(1){
 228   2          
 229   2          c = le_teclado();
 230   2          if (c != 0){
 231   3            escreve_LCD(c);
 232   3            sound_buzzer_teclado();
 233   3            
 234   3          }
 235   2          
 236   2        
 237   2          
 238   2        } 
 239   1      }
C51 COMPILER V9.57.0.0   CODIGO_MAIN                                                       05/23/2018 11:44:45 PAGE 5   

 240          
 241          
 242          
 243          
 244          
 245          
 246          
 247          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     53    ----
   CONSTANT SIZE    =     90    ----
   XDATA SIZE       =    870    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       1
   IDATA SIZE       =     30    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
